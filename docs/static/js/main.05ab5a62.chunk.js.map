{"version":3,"sources":["exponentialRandom.js","SimulationZ.js","SimulationT.js","App.js","reportWebVitals.js","index.js"],"names":["randomExponential","rate","randomUniform","U","Math","random","log","Wrapper","styled","div","OFFSET","Svg","svg","ControlPanel","fillRandomArray","array","t","newArray","filter","z","length","push","SimulationZ","state","pause","showControls","lambda","points","infected","arrowsLeft","arrowsRight","deltas","play","setState","update","advanceT","t2","SPEED","points2","map","point","i","lambdaChange","x","refresh","lambdaChangeEnded","e","hideControls","preventDefault","stopPropagation","this","interval","setInterval","viewBox","id","orient","markerWidth","markerHeight","refX","refY","d","fill","x1","y1","x2","y2","stroke","strokeWidth","delx","r","cx","cy","tArrow","markerEnd","tDelta","y","style","opacity","onClick","display","flexDirection","justifyContent","alignItems","toFixed","axis","xstep","xmin","xmax","onChange","onDragEnd","padding","margin","React","Component","FPS","nNodes","pow","Array","SimulationT","updateBehavior","infectProp","floor","j","window","requestAnimationFrame","layer","nPixels","pixels","delY","perPixel","totalInfected","k","acc","width","height","textAnchor","layers","renderLayerAcc","renderLayer1","renderLayer2","renderAccLayers","flat","App","status","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05ab5a62.chunk.js","sourcesContent":["function randomExponential(rate, randomUniform) {\n  // http://en.wikipedia.org/wiki/Exponential_distribution#Generating_exponential_variates\n  rate = rate || 1;\n\n  // Allow to pass a random uniform value or function\n  // Default to Math.random()\n  let U = randomUniform;\n  if (typeof randomUniform === 'function') U = randomUniform();\n  if (!U) U = Math.random();\n\n  return -Math.log(U)/rate;\n}\n\nexport default randomExponential\n","import './App.css';\nimport styled from 'styled-components'\nimport React from \"react\";\nimport randomExponential from \"./exponentialRandom\";\nimport Slider from 'react-input-slider';\nimport Latex from 'react-latex'\nimport { MdRefresh, MdPlayArrow as MdPlay, MdPause, MdKeyboardHide } from 'react-icons/md'\n\nconst Wrapper = styled.div`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: stretch;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`\n\nconst MAX_T = 1.;\nconst FPS = 40;\nconst SPEED = 0.1;\nconst RESETAFTERCHANGE = false\nconst OFFSET = 200\n\nconst Svg = styled.svg`\n  flex: 1;\n  \n  circle {\n    transition: fill 0.2s;\n  }\n`\n\nconst ControlPanel = styled.div`\n  position: absolute;\n  width: 100%;\n  height: ${OFFSET}px;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: opacity 0.2s;\n`\n\nconst fillRandomArray = (array, rate, t) => {\n  const newArray = array.filter(z => z >= t)\n  while (newArray.length === 0 || newArray[newArray.length - 1] < MAX_T + t)\n    newArray.push(randomExponential(rate) + (newArray.length === 0 ? t : newArray[newArray.length - 1]))\n  return newArray\n}\n\nclass SimulationZ extends React.Component {\n\n  state = {\n    t: 0,\n    pause: true,\n    showControls: false,\n    lambda: 2,\n    points: [\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n      {infected: true, arrowsLeft: [], arrowsRight: [], deltas: []},\n    ],\n\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.update, 1000 / FPS);\n  }\n\n  play = () => this.setState({ pause: false })\n  pause = () => this.setState({ pause: true })\n\n  update = (advanceT = true) => {\n    this.setState(({points, t, lambda, pause}) => {\n      const t2 = t + ((advanceT && !pause) ? SPEED / FPS : 0)\n\n      // Assume only one arrow or delta\n      const points2 = points.map((point, i) => {\n        let infected = point.infected\n        if (point.infected && point.deltas.length > 0 && point.deltas[0] >= t && point.deltas[0] < t2)\n          infected = false\n        else if (i > 0 && points[i - 1].infected && points[i - 1].arrowsRight.length > 0\n          && points[i - 1].arrowsRight[0] >= t && points[i - 1].arrowsRight[0] < t2)\n          infected = true\n        else if (i < points.length - 1 && points[i + 1].infected && points[i + 1].arrowsLeft.length > 0\n          && points[i + 1].arrowsLeft[0] >= t && points[i + 1].arrowsLeft[0] < t2)\n          infected = true\n\n        const arrowsLeft = fillRandomArray(point.arrowsLeft, lambda, t2)\n        const arrowsRight = fillRandomArray(point.arrowsRight, lambda, t2)\n        const deltas = fillRandomArray(point.deltas, 1, t2)\n\n        return {infected, arrowsLeft, arrowsRight, deltas}\n      })\n      return {t: t2, points: points2}\n    })\n  }\n\n  lambdaChange = ({x}) => {\n    this.setState(state => ({\n      lambda: x,\n    }))\n  }\n\n  refresh = () => {\n    this.setState(state => ({\n      points: state.points.map(point => ({...point, infected: true, arrowsLeft: [], arrowsRight: [], deltas: []}))\n    }), () => this.update(false))\n  }\n\n  lambdaChangeEnded = () => {\n    if (RESETAFTERCHANGE) {\n      this.setState(state => ({\n        points: state.points.map(point => ({...point, arrowsLeft: [], arrowsRight: []}))\n      }), this.update)\n    }\n  }\n\n  showControls = (e) => this.setState({showControls: true })\n  hideControls = (e) => {\n    this.setState({showControls: false })\n    e.preventDefault()\n    e.stopPropagation()\n  }\n\n  render() {\n    const {points, t, lambda, pause, showControls} = this.state\n    return (\n      <Wrapper>\n        <Svg viewBox=\"0 0 1920 1080\">\n          <defs>\n            <marker id='head' orient=\"auto\"\n                    markerWidth='2' markerHeight='4'\n                    refX='0.1' refY='2'>\n              <path d='M0,0 V4 L2,2 Z' fill=\"gray\"/>\n            </marker>\n          </defs>\n          <line x1={0} y1={1080 - OFFSET} x2={1920} y2={1080 - OFFSET} stroke=\"white\" strokeWidth=\"2\"/>\n          {this.state.points.map((point, i) => {\n            const delx = (1920 + 2 * 50) / (points.length - 1)\n            const x = -50 + i * delx\n            return <>\n              <line x1={x} y1={1080-OFFSET} x2={x} y2={0} stroke=\"gray\" strokeWidth={1}/>\n              <circle r={10} cx={x} cy={1080-OFFSET} stroke=\"white\"\n                      fill={point.infected ? \"white\" : \"var(--back-col)\"}/>\n              {point.arrowsLeft.map(tArrow =>\n                <path markerEnd='url(#head)' strokeWidth={4} stroke='gray'\n                      d={`M ${x - 15}, ${1080-OFFSET - (tArrow - t) / MAX_T * 1080} h ${-delx + 35}`}/>)}\n              }\n              {point.arrowsRight.map(tArrow =>\n                <path markerEnd='url(#head)' strokeWidth={4} stroke='gray'\n                      d={`M ${x + 15}, ${1080-OFFSET - (tArrow - t) / MAX_T * 1080} h ${delx - 35}`}/>)}\n              }\n              {point.deltas.map(tDelta =>\n                <text x={x - 8} y={1080-OFFSET - (tDelta - t) / MAX_T * 1080 + 8} fill='white'>δ</text>)}\n            </>\n          })}\n        </Svg>\n        <ControlPanel style={{ opacity: showControls ? 1 : 0 }} onClick={this.showControls}>\n          <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n            <Latex>{`$\\\\lambda=${lambda.toFixed(1)}$`}</Latex>\n            <Slider axis=\"x\" x={lambda} xstep={0.1} xmin={0.1} xmax={10} onChange={this.lambdaChange} onDragEnd={this.lambdaChangeEnded}/>\n          </div>\n          {pause\n            ? <MdPlay style={{padding: '10px', margin: '10px'}} stroke={\"white\"} onClick={this.play}/>\n            : <MdPause style={{padding: '10px', margin: '10px'}} stroke={\"white\"} onClick={this.pause}/>\n          }\n          <MdRefresh style={{ padding: '10px', margin: '10px' }} stroke={\"white\"} onClick={this.refresh} />\n          <MdKeyboardHide style={{ padding: '10px', margin: '10px' }} stroke={\"white\"} onClick={this.hideControls} />\n\n        </ControlPanel>\n      </Wrapper>\n    );\n  }\n}\n\nexport default SimulationZ\n","import './App.css';\nimport styled from 'styled-components'\nimport React from \"react\";\nimport Slider from 'react-input-slider';\nimport Latex from 'react-latex'\nimport {MdKeyboardHide, MdPause, MdPlayArrow as MdPlay, MdRefresh} from 'react-icons/md'\n\nconst Wrapper = styled.div`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: stretch;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`\nconst LAYERS = 9\nconst FPS = 30\nconst d = 6\nlet nNodes = 0\nfor (let i = 0; i < LAYERS; i++) nNodes += Math.pow(d, i)\nconst infected = new Array(nNodes)\nconst delx = (1920 + 2 * 50) / (LAYERS - 1)\n\n\nconst OFFSET = 200\n\nconst Svg = styled.svg`\n  flex: 1;\n\n  circle {\n    transition: fill 0.2s;\n  }\n\n  line {\n    transition: stroke 0.2s;\n  }\n`\n\nconst ControlPanel = styled.div`\n  position: absolute;\n  width: 100%;\n  height: ${OFFSET}px;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: opacity 0.2s;\n`\n\nclass SimulationT extends React.Component {\n\n  state = {\n    t: 0,\n    pause: true,\n    showControls: false,\n    lambda: 1 / (d - 1),\n    infected\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => window.requestAnimationFrame(this.update), 1000 / FPS);\n    this.refresh()\n  }\n\n  play = () => this.setState({pause: false})\n  pause = () => this.setState({pause: true})\n\n  updateBehavior = ({infected, t, lambda}) => {\n    const healProp = 1 / FPS\n    const infectProp = lambda / FPS\n    for (let i = 0; i < nNodes; i++) {\n      if (infected[i] === 1) {\n        if (Math.random() < healProp) infected[i] = 0\n        if (i > 0 && Math.random() < infectProp) infected[Math.floor((i - 1) / d)] = 1\n        if (i * d <= nNodes) {\n          for (let j = 1; j <= d; j++)\n            if (Math.random() < infectProp) infected[i * d + j] = 1\n        }\n      }\n    }\n    return {infected, t: t + 1 / FPS}\n  }\n\n  update = () => {\n    if (this.state.pause) return\n    this.setState(this.updateBehavior)\n  }\n\n  lambdaChange = ({x}) => {\n    this.setState(state => ({\n      lambda: x,\n    }))\n  }\n\n  refresh = () => {\n    for (let i = 0; i < nNodes; i++)\n      infected[i] = 1;\n\n    const until = 1 + 6\n    for (let i = 0; i < until; i++)\n      infected[i] = 1\n    for (let i = until; i < nNodes; i++)\n      infected[i] = 0;\n\n    this.setState({infected, t: 0})\n  }\n\n  showControls = (e) => this.setState({showControls: true})\n  hideControls = (e) => {\n    this.setState({showControls: false})\n    e.preventDefault()\n    e.stopPropagation()\n  }\n\n  renderLayer(infected, layer) {\n    const nPixels = Math.pow(d, layer)\n    const pixels = new Array(nPixels);\n    const delY = (1080 - OFFSET - 100) / (nPixels - 1)\n    let y = 50\n    for (let i = 0; i < nPixels; i++) {\n      pixels[i] = <line x1={50 + layer * delx} x2={50 + layer * delx} y1={y} y2={y + delY}\n                        stroke={infected[nPixels + i] ? \"white\" : \"var(--back-col)\"} strokeWidth={10}/>\n      y += delY\n    }\n    return pixels\n  }\n\n  renderLayerAcc(layer) {\n    const nPixels = Math.pow(d, 3)\n    const pixels = new Array(nPixels + 2);\n    const delY = (1080 - OFFSET - 100) / (nPixels - 1)\n    const perPixel = Math.pow(d, layer - 3)\n    let y = 50\n    let j = 0\n    let totalInfected = 0\n    for (let k = 0; k < layer; k++) j += Math.pow(d, k)\n    for (let i = 0; i < nPixels; i++) {\n      let acc = 0\n      for (let k = 0; k < perPixel; k++) {\n        acc += infected[j]\n        j++\n      }\n      totalInfected += acc\n      pixels[i] = <line x1={50 + layer * delx} x2={50 + layer * delx} y1={y} y2={y + delY}\n                        stroke={acc > 0 ? \"white\" : \"var(--back-col)\"} strokeWidth={10}/>\n      y += delY\n    }\n    pixels[nPixels] = <rect x={50 + layer*delx - 5} y={50} width={10} height={1080 - OFFSET - 100} fill=\"transparent\" stroke=\"white\"/>\n    pixels[nPixels+1] = <text x={50 + layer * delx} textAnchor=\"middle\" y={1080 - OFFSET - 15} fill=\"white\">{totalInfected}</text>\n    return pixels\n  }\n\n  renderAccLayers() {\n    const layers = []\n    for (let k = 3; k < LAYERS; k++)\n      layers.push(this.renderLayerAcc(k))\n    return layers;\n  }\n\n  renderLayer1() {\n    const pixels = new Array(d)\n    for (let i = 1; i <= d; i++) pixels[i] = <>\n      <circle r={10} cx={50 + delx} cy={50 + (1080 - OFFSET - 100) / (d - 1) * (i - 1)} stroke=\"white\"\n              fill={infected[i] ? \"white\" : \"var(--back-col)\"}/>\n      <line x1={50 + 15} y1={(1080 - OFFSET) / 2} x2={50 + delx - 15}\n            y2={50 + (1080 - OFFSET - 100) / (d - 1) * (i - 1)}\n            stroke=\"gray\" strokeWidth=\"2\"/>\n    </>\n    return pixels\n  }\n\n  renderLayer2() {\n    const pixels = new Array(d * d)\n    for (let i = 1; i <= d; i++) {\n      for (let j = 1; j <= d; j++) {\n        pixels[d * (i - 1) + j - 1] = <>\n          <circle r={5} cx={50 + 2 * delx} cy={50 + (1080 - OFFSET - 100) / (d*d - 1) * (d * (i - 1) + j - 1)}\n                  stroke=\"white\" fill={infected[i * d + j] ? \"white\" : \"var(--back-col)\"}/>\n          <line x1={50 + delx + 15} y1={50 + (1080 - OFFSET - 100) / (d-1) * (i - 1)} x2={50 + 2 * delx - 10}\n                y2={50 + (1080 - OFFSET - 100) / (d*d - 1) * (d * (i - 1) + j - 1)} stroke=\"gray\" strokeWidth=\"2\"/>\n        </>\n      }\n    }\n    return pixels\n  }\n\n  render() {\n    const {t, lambda, pause, showControls, infected} = this.state\n\n    return (\n      <Wrapper>\n        <Svg viewBox=\"0 0 1920 1080\">\n\n          <line x1={0} y1={1080 - OFFSET} x2={1920} y2={1080 - OFFSET} stroke=\"white\" strokeWidth=\"2\"/>\n          <circle r={10} cx={50} cy={(1080 - OFFSET) / 2} stroke=\"white\"\n                  fill={infected[0] ? \"white\" : \"var(--back-col)\"}/>\n          {/** LAYER 1 */\n            this.renderLayer1()}\n          {/** LAYER 2 */\n            this.renderLayer2()}\n          }\n          {this.renderAccLayers(infected).flat()}\n        </Svg>\n        <ControlPanel style={{opacity: showControls ? 1 : 0}} onClick={this.showControls}>\n          <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n            <Latex>{`$\\\\lambda=${lambda.toFixed(2)}$`}</Latex>\n            <Slider axis=\"x\" x={lambda} xstep={0.01} xmin={0.01} xmax={1} onChange={this.lambdaChange}\n                    onDragEnd={this.lambdaChangeEnded}/>\n          </div>\n          {pause\n            ? <MdPlay style={{padding: '10px', margin: '10px'}} stroke={\"white\"} onClick={this.play}/>\n            : <MdPause style={{padding: '10px', margin: '10px'}} stroke={\"white\"} onClick={this.pause}/>\n          }\n          <MdRefresh style={{padding: '10px', margin: '10px'}} stroke={\"white\"} onClick={this.refresh}/>\n          <MdKeyboardHide style={{padding: '10px', margin: '10px'}} stroke={\"white\"} onClick={this.hideControls}/>\n          <Latex>{`$t=${t.toFixed(1)}$`}</Latex>\n\n        </ControlPanel>\n      </Wrapper>\n    );\n  }\n}\n\nexport default SimulationT\n","import './App.css';\nimport SimulationZ from \"./SimulationZ\";\nimport React from \"react\";\nimport SimulationT from \"./SimulationT\";\nimport styled from \"styled-components\";\n\n\nconst Wrapper = styled.div`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  > button {\n    width: 200px;\n    padding: 10px;\n    margin: 10px;\n  }\n  font-size: calc(10px + 2vmin);\n  color: white;\n`\n\nclass App extends React.Component {\n  state = { status: 'menu' }\n\n  render () {\n    return (\n      <div className=\"App\">\n        {this.state.status === 'tree' && <SimulationT/>}\n        {this.state.status === 'integers' && <SimulationZ/>}\n        {this.state.status === 'menu' && <Wrapper>\n          <button onClick={() => this.setState({ status: 'integers' })}>Simulate on integers!</button>\n          <button onClick={() => this.setState({ status: 'tree' })}>Simulate on tree!</button>\n        </Wrapper>}\n      </div>\n    );\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}